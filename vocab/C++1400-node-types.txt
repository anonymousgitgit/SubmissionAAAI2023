enum
error
goto_statement
'
mutable
delete_expression
true
template_type
::
constexpr
field_identifier
...
identifier
explicit
while_statement
for_statement
scoped_identifier
new_declarator
condition_clause
||
~
unary_expression
type_parameter_declaration
>
class
struct_specifier
-=
abstract_array_declarator
binary_expression
template_function
variadic_type_parameter_declaration
compound_statement
&&
for_range_loop
case
declaration
optional_type_parameter_declaration
parenthesized_declarator
=
template_argument_list
parameter_list
parameter_declaration
friend_declaration
abstract_parenthesized_declarator
+
unsigned
variadic_parameter_declaration
?
char_literal
missing_assignment_expression
break
sizeof_expression
pointer_expression
"
field_declaration_list
auto
continue
<<
type_definition
field_initializer_list
public
class_specifier
throw_statement
number_literal
lambda_expression
primitive_type
inline
|
sized_type_specifier
__attribute__
alias_declaration
raw_string_literal
init_declarator
throw
base_class_clause
declaration_list
!=
&=
override
for
attribute
this
destructor_name
field_initializer
namespace
return_statement
throw_specifier
private
template_method
try_statement
operator_name
explicit_function_specifier
function_definition
if
type_identifier
noexcept
*
missing_binary_expression
typedef
--
namespace_identifier
do_statement
parameter_pack_expansion
virtual
final
lambda_capture_specifier
update_expression
/
<=
default
<
pointer_declarator
protected
ms_pointer_modifier
]]
conditional_expression
comma_expression
namespace_definition
return
virtual_function_specifier
abstract_reference_declarator
template_template_parameter_declaration
bitfield_clause
abstract_pointer_declarator
%
struct
decltype
type_descriptor
delete
continue_statement
trailing_return_type
operator
register
new
access_specifier
string_literal
reference_declarator
template_declaration
static_assert_declaration
template
function_declarator
optional_parameter_declaration
static
new_expression
labeled_statement
sizeof
enumerator
while
default_method_clause
delete_method_clause
^
enumerator_list
concatenated_string
else
type_qualifier
translation_unit
+=
scoped_namespace_identifier
case_statement
statement_identifier
false
try
break_statement
subscript_expression
union
-
virtual_specifier
cast_expression
initializer_list
escape_sequence
compound_literal_expression
template_parameter_list
attribute_specifier
enum_specifier
switch_statement
argument_list
array_declarator
using_declaration
const
typename
++
expression_statement
structured_binding_declarator
static_assert
call_expression
scoped_type_identifier
[[
missing_update_expression
parenthesized_expression
ms_restrict_modifier
lambda_default_capture
union_specifier
abstract_function_declarator
friend
field_expression
extern
using
assignment_expression
nullptr
catch
short
.
if_statement
==
goto
long
variadic_declarator
linkage_specification
field_declaration
storage_class_specifier
->
catch_clause
dependent_type
operator_cast
&
signed
unk_type